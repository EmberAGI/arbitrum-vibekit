name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic # Need an `id` for output variables
        with:
          dry_run: true
          working_directory: typescript
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-build:
    name: Build Docker
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.new_release_published
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        project:
          - examples/lending-agent-no-wallet
          - examples/swapping-agent
          - examples/liquidity-agent-no-wallet
          - examples/swapping-agent-no-wallet
          - examples/pendle-agent
          - clients/web
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get name
        id: meta
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME=$(basename ${{ matrix.project }})
          echo "image_name=ghcr.io/${OWNER}/${IMAGE_NAME}" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push example Docker image
        uses: docker/build-push-action@v5
        if: matrix.project != 'clients/web'
        with:
          file: typescript/${{ matrix.project }}/Dockerfile.prod
          push: false
          platforms: linux/amd64,linux/arm64
          context: typescript/
          tags: |
            ${{ steps.meta.outputs.image_name }}:latest
            ${{ steps.meta.outputs.image_name }}:${{ github.sha }}
            ${{ steps.meta.outputs.image_name }}:${{ needs.release.outputs.new_release_version }}

      # The web client Dockerfile is not set up with the pnpm workspace yet,
      - name: Build and push client Docker image
        uses: docker/build-push-action@v5
        if: matrix.project == 'clients/web'
        with:
          file: typescript/${{ matrix.project }}/Dockerfile.prod
          push: false
          platforms: linux/amd64,linux/arm64
          context: typescript/clients/web/
          tags: |
            ${{ steps.meta.outputs.image_name }}:latest
            ${{ steps.meta.outputs.image_name }}:${{ github.sha }}
            ${{ steps.meta.outputs.image_name }}:${{ needs.release.outputs.new_release_version }}

